{"version":3,"sources":["Event.js","EventList.js","CitySearch.js","NumberOfEvents.js","mockData.js","api.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["Event","props","state","opened","mockData","toggleBox","bind","this","setState","btnText","Card","Body","Title","Subtitle","className","Text","Button","variant","onClick","Component","EventList","events","Row","Col","md","map","event","id","CitySearch","query","suggestions","showSuggestions","undefined","handleInputChanged","value","target","locations","filter","location","toUpperCase","indexOf","handleItemClicked","suggestion","updateEvents","type","onChange","onFocus","style","display","NumberOfEvents","extractLocations","Set","checkToken","accessToken","a","fetch","then","res","json","catch","error","result","removeQuery","window","history","pushState","pathname","newurl","protocol","host","getToken","code","encodeCode","encodeURIComponent","access_token","localStorage","setItem","getEvents","NProgress","start","href","startsWith","done","getAccessToken","token","url","axios","get","data","JSON","stringify","getItem","tokenCheck","removeItem","searchParams","URLSearchParams","search","results","authUrl","App","locationEvents","mounted","Boolean","hostname","match","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"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","file":"static/js/main.f06f80c9.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Button, Card } from 'react-bootstrap';\n\n\n\nclass Event extends Component {\n  constructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\topened: false,\n      mockData: '',\n\t\t};\n\t\tthis.toggleBox = this.toggleBox.bind(this);\n  }\n  \n  toggleBox() {\n\t\tconst { opened } = this.state;\n\t\tthis.setState({\n\t\t\topened: !opened,\n\t\t});\n\t}\n\n  render() {\n    var { btnText } = this.props;\n    //const { summary, location, start, htmlLink, description } = this.props.events;\n\t\tconst { opened } = this.state;\n\n\t\tif (opened){\n\t\t\tbtnText ='Hide Details';\n\t\t}else{\n\t\t\tbtnText ='View Details';\n\t\t}\n    return (\n      <Card>\n        <Card.Body>\n          <Card.Title>Event Title: </Card.Title>\n          <Card.Subtitle className=\"mb-2 text-muted\">Event Location</Card.Subtitle>\n          <Card.Text>Event date and Time</Card.Text>\n          <div className=\"ToggleButtonWrapper\">\n          <Button variant=\"link\" className=\"ToggleButton\" onClick={this.toggleBox}>{btnText}</Button>\n          </div>\n          {opened && (\t\t\t\t\t\n            <Card.Text className=\"extraDetails\">\n              This is the text that should show\n            </Card.Text>\n            )}\n          </Card.Body>\n      </Card>\n    );\n  }\n}\n\nexport default Event;","import React, { Component } from 'react';\nimport Event from './Event';\nimport { Row, Col } from 'react-bootstrap';\n\nclass EventList extends Component {\n  render() {\n    const { events } = this.props;\n    return (\n      <>\n        <Row>\n          <div>Current Events</div>\n        </Row>\n        <Row>\n          <Col md={12}>\n            <ul className=\"EventList\">\n              {events && events.map(event =>\n                <li key={event.id} className=\"EventItem\">\n                  <Event event={event} />\n                </li>\n              )}\n            </ul>\n          </Col>\n        </Row>\n      </>\n    );\n  }\n}\n\nexport default EventList;","import React, { Component } from 'react';\n\n\nclass CitySearch extends Component {\n  \n  state = {\n    query:'',\n    suggestions: [],\n    showSuggestions: undefined\n  }\n  \n  handleInputChanged = (event) => {\n    const value = event.target.value;\n    const suggestions = this.props.locations.filter((location) => {\n      return location.toUpperCase().indexOf(value.toUpperCase()) > -1;\n    });\n    this.setState({ \n      query: value,\n      suggestions, \n    });\n  };\n\n  handleItemClicked = (suggestion) => {\n    this.setState({\n      query: suggestion,\n      showSuggestions: false\n    });\n    this.props.updateEvents(suggestion);\n  }\n\n  render() { \n    return (\n      <div className=\"CitySearch\">\n        \n        <input type=\"text\" \n          className=\"city\" \n          value={this.state.query} \n          onChange={this.handleInputChanged}\n          onFocus={() => { this.setState({ showSuggestions: true }) }} />\n\n        <ul className=\"suggestions\" style={this.state.showSuggestions ? {}: { display: 'none' }}>\n          {this.state.suggestions.map((suggestion) => (\n          <li\n            key={suggestion}\n            onClick={() => this.handleItemClicked(suggestion)}\n            >{suggestion}</li>\n          ))}\n          <li onClick={() => this.handleItemClicked(\"all\")}>\n            <b>See all cities</b>\n          </li>\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default CitySearch","import React, { Component } from 'react';\n\nclass NumberOfEvents extends Component {\n  \n  state = {\n    query:'',\n  }\n  \n  handleInputChanged = (event) => {\n    const value = event.target.value;\n    this.setState({ \n      query: value,\n    });\n  };\n\n  render() { \n    return (\n      <div className=\"CitySearch\">\n        <input type=\"text\" id=\"numberInput\" className=\"numberInput\" value={this.state.query} onChange={this.handleInputChanged} />\n      </div>\n    );\n  }\n}\n\nexport default NumberOfEvents;","const mockData = [ \n\n  {\n    \"kind\": \"calendar#event\",\n    \"etag\": \"\\\"3181161784712000\\\"\",\n    \"id\": \"4eahs9ghkhrvkld72hogu9ph3e_20200519T140000Z\",\n    \"status\": \"confirmed\",\n    \"htmlLink\": \"https://www.google.com/calendar/event?eid=NGVhaHM5Z2hraHJ2a2xkNzJob2d1OXBoM2VfMjAyMDA1MTlUMTQwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20\",\n    \"created\": \"2020-05-19T19:17:46.000Z\",\n    \"updated\": \"2020-05-27T12:01:32.356Z\",\n    \"summary\": \"Learn JavaScript\",\n    \"description\": \"Have you wondered how you can ask Google to show you the list of the top ten must-see places in London? And how Google presents you the list? How can you submit the details of an application? Well, JavaScript is doing these. :) \\n\\nJavascript offers interactivity to a dull, static website. Come, learn JavaScript with us and make those beautiful websites.\",\n    \"location\": \"London, UK\",\n    \"creator\": {\n     \"email\": \"fullstackwebdev@careerfoundry.com\",\n     \"self\": true\n    },\n    \"organizer\": {\n     \"email\": \"fullstackwebdev@careerfoundry.com\",\n     \"self\": true\n    },\n    \"start\": {\n     \"dateTime\": \"2020-05-19T16:00:00+02:00\",\n     \"timeZone\": \"Europe/Berlin\"\n    },\n    \"end\": {\n     \"dateTime\": \"2020-05-19T17:00:00+02:00\",\n     \"timeZone\": \"Europe/Berlin\"\n    },\n    \"recurringEventId\": \"4eahs9ghkhrvkld72hogu9ph3e\",\n    \"originalStartTime\": {\n     \"dateTime\": \"2020-05-19T16:00:00+02:00\",\n     \"timeZone\": \"Europe/Berlin\"\n    },\n    \"iCalUID\": \"4eahs9ghkhrvkld72hogu9ph3e@google.com\",\n    \"sequence\": 0,\n    \"reminders\": {\n     \"useDefault\": true\n    },\n    \"eventType\": \"default\"\n   },\n   {\n    \"kind\": \"calendar#event\",\n    \"etag\": \"\\\"3181159875584000\\\"\",\n    \"id\": \"3qtd6uscq4tsi6gc7nmmtpqlct_20200520T120000Z\",\n    \"status\": \"confirmed\",\n    \"htmlLink\": \"https://www.google.com/calendar/event?eid=M3F0ZDZ1c2NxNHRzaTZnYzdubW10cHFsY3RfMjAyMDA1MjBUMTIwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20\",\n    \"created\": \"2020-05-19T19:14:30.000Z\",\n    \"updated\": \"2020-05-27T11:45:37.792Z\",\n    \"summary\": \"React is Fun\",\n    \"description\": \"Love HTML, CSS, and JS? Want to become a cool front-end developer? \\n\\nReact is one of the most popular front-end frameworks. There is a huge number of job openings for React developers in most cities. \\n\\nJoin us in our free React training sessions and give your career a new direction. \",\n    \"location\": \"Berlin, Germany\",\n    \"creator\": {\n     \"email\": \"fullstackwebdev@careerfoundry.com\",\n     \"self\": true\n    },\n    \"organizer\": {\n     \"email\": \"fullstackwebdev@careerfoundry.com\",\n     \"self\": true\n    },\n    \"start\": {\n     \"dateTime\": \"2020-05-20T14:00:00+02:00\",\n     \"timeZone\": \"Europe/Berlin\"\n    },\n    \"end\": {\n     \"dateTime\": \"2020-05-20T15:00:00+02:00\",\n     \"timeZone\": \"Europe/Berlin\"\n    },\n    \"recurringEventId\": \"3qtd6uscq4tsi6gc7nmmtpqlct\",\n    \"originalStartTime\": {\n     \"dateTime\": \"2020-05-20T14:00:00+02:00\",\n     \"timeZone\": \"Europe/Berlin\"\n    },\n    \"iCalUID\": \"3qtd6uscq4tsi6gc7nmmtpqlct@google.com\",\n    \"sequence\": 0,\n    \"reminders\": {\n     \"useDefault\": true\n    },\n    \"eventType\": \"default\"\n   },\n];\n\nexport { mockData };","import { mockData } from './mockData';\nimport axios from 'axios';\nimport NProgress from 'nprogress';\n\nexport const extractLocations = (events) => {\n  var extractLocations = events.map((event) => event.location);\n  var locations = [...new Set(extractLocations)];\n  return locations;\n};\n\nconst checkToken = async (accessToken) => {\n  const result = await fetch(\n    `https://www.googleapis.com/oauth2/v1/tokeninfo?access_token=${accessToken}`\n  )\n    .then((res) => res.json())\n    .catch((error) => error.json());\n  return result;\n};\n\nconst removeQuery = () => {\n  if (window.history.pushState && window.location.pathname) {\n    var newurl =\n      window.location.protocol + \"//\" + window.location.host + window.location.pathname;\n    window.history.pushState(\"\", \"\", newurl);\n  } else {\n    newurl = window.location.protocol + \"//\" + window.location.host;\n    window.history.pushState(\"\", \"\", newurl);\n  }\n};\n\nconst getToken = async (code) => {\n  const encodeCode = encodeURIComponent(code);\n  const { access_token } = await fetch(\n    'https://m6fz8imtyl.execute-api.us-east-2.amazonaws.com/dev/api/token' + '/' + encodeCode\n  )\n    .then((res) => {\n      return res.json();\n    })\n    .catch((error) => error);\n\n  access_token && localStorage.setItem(\"access_token\", access_token);\n\n  return access_token;\n};\n\nexport const getEvents = async () => {\n  NProgress.start();\n\n  if (window.location.href.startsWith(\"http://localhost\")) {\n    NProgress.done();\n    return mockData;\n  }\n\n  const token = await getAccessToken();\n\n  if (token) {\n    removeQuery();\n    const url = 'https://m6fz8imtyl.execute-api.us-east-2.amazonaws.com/dev/api/get-events' + '/' + token;\n    const result = await axios.get(url);\n    if (result.data) {\n      var locations = extractLocations(result.data.events);\n      localStorage.setItem(\"lastEvents\", JSON.stringify(result.data));\n      localStorage.setItem(\"locations\", JSON.stringify(locations));\n    }\n    NProgress.done();\n    return result.data.events;\n  }\n};\n\nexport const getAccessToken = async () => {\n  const accessToken = localStorage.getItem('access_token');\n  const tokenCheck = accessToken && (await checkToken(accessToken));\n\n  if (!accessToken || tokenCheck.error) {\n    await localStorage.removeItem(\"access_token\");\n    const searchParams = new URLSearchParams(window.location.search);\n    const code = await searchParams.get(\"code\");\n    if (!code) {\n      const results = await axios.get(\n        \"https://m6fz8imtyl.execute-api.us-east-2.amazonaws.com/dev/api/get-auth-url\"\n      );\n      const { authUrl } = results.data;\n      return (window.location.href = authUrl)\n    }\n    return code && getToken(code);\n  }\n  return accessToken;\n}","import React, { Component } from 'react';\nimport './App.css';\nimport EventList from './EventList';\nimport CitySearch from './CitySearch';\nimport NumberOfEvents from './NumberOfEvents';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport { getEvents, extractLocations } from './api';\nimport './nprogress.css';\n\nclass App extends Component {\n  state = {\n    events: [],\n    locations: []\n  }\n\n  componentDidMount() {\n    this.mounted = true;\n    getEvents().then((events) => {\n      if (this.mounted) {\n        this.setState({ events, locations: extractLocations(events) });\n      }\n    });\n  }\n\n  componentWillUnmount(){\n    this.mounted = false;\n  }\n\n  updateEvents = (location) => {\n    getEvents().then((events) => {\n      const locationEvents = (location === 'all') ?\n      events :\n      events.filter((event) => event.location === location);\n      this.setState({\n        events: locationEvents\n      });\n    });\n  }\n\n  render() {\n    const { locations, events } = this.state;\n    return (\n      <div className=\"App\">\n        <h1>This meetup app should render</h1>\n          <CitySearch locations={locations} updateEvents={this.updateEvents} />\n        <NumberOfEvents />\n        <EventList events={events} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorkerRegistration.unregister();\nreportWebVitals();\n"],"sourceRoot":""}